name: Build and Deploy Project

# on: [push]
on:
  push:
    branches: 
      - "master" 

jobs:
  build:
    environment:
      name: testing
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3

      - name: Install python version 3.9 
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: update pip
        run: python -m pip install --upgrade pip

      - name: install all dependencies
        run: pip install -r requirements.txt

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.output.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache

      # - name: Image digest
        # run: echo ${{ steps.docker_build.output.name }}


  deploy:
    environment:
      name: testing
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3

      # - name: Deploying stuff
      #   run: echo "going to delpoying"

      # - name: Deploy to VPS via SSH
      #   uses: appleboy/ssh-action@v0.1.2
      #   with:
      #     host: 212.111.88.252
      #     username: root
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     port: 22
      #     script: |
      #       docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest
      #       docker kill 2_${{ github.event.repository.name }} || true
      #       docker rm -f 2_${{ github.event.repository.name }} || true
      #       docker run -d --name 2_${{ github.event.repository.name }} -p 8056:5001 ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest

      